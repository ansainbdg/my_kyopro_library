import sys
def input(): return sys.stdin.readline().rstrip()

def main():
    #modの値は予め準備しておく
    mod = 10**9+7
    mod2 = 998244353
    
    #Nを桁ごとの数字のリストとして受け取る
    n=list(map(int,list(input())))

    #あればその他の入力を受け取る

    #dp[i]=今まで見てきた数字未満の数で、条件がiなものの合計
    #nの最上位桁の値で初期化(最上位桁が7なら、0~6までの数字の数え上げ結果になるように初期化する)
    dp=0

    #n_info=今までの見てきた数字の、問題に必要な情報を格納
    #nの最上位桁の値で初期化
    n_info=n[0]
    
    #nを上位2桁目から見ていく。
    for nn in n[1:]:
        """
        具体例として今まで見てきた数字が37とする。
        dpには、0から36までの数え上げ結果が入っている。
        n_infoには37に関する情報が入っている。
        ここに新たに次の桁としてnn=6を見るとするとき。
        newdpに、0から375までの数え上げ結果を入れたい。
        """
        #newdpを入れる配列を作る。
        newdp=0
        
        #0から36までの数え上げ結果から、0から369までの数え上げ結果を計算する。
        for i in range(10):
            newdp+=dp
        
        #370から375の数え上げ結果を、n_infoから計算する。
        for i in range(nn):
            newdp+=n_info
        
        #dpをnewdpに更新する
        dp=newdp

        #n_infoを376に関する情報に更新する。
        n_info+=nn


    #n自身が数え上げ結果に入っていないので加える。nの桁を最後まで見たので、n_infoはn自身に関する情報が入っているはず。    
    dp+=n_info

    #0を除外するなら除外する


    #答えを出力
    print(dp)

def main2():
    #modの値は予め準備しておく
    mod = 10**9+7
    mod2 = 998244353
    
    #Nを桁ごとの数字のリストとして受け取る
    n=list(map(int,list(input())))

    #あればその他の入力を受け取る


    #dp[i]=今まで見てきた数字未満の数で、条件がiなものの合計
    #nの最上位桁の値で初期化(最上位桁が7なら、1~6までの数字の数え上げ結果になるように初期化する)
    dp=n[0]

    #n_info=今までの見てきた数字の、問題に必要な情報を格納
    #nの最上位桁の値で初期化
    n_info=n[0]
    
    #nを上位2桁目から見ていく。
    for nn in n[1:]:
        """
        具体例として今まで見てきた数字が37とする。
        dpには、1から36までの数え上げ結果が入っている。
        n_infoには37に関する情報が入っている。
        ここに新たに次の桁としてnn=6を見るとするとき。
        newdpに、1から375までの数え上げ結果を入れたい。
        """
        #newdpを入れる配列を作る。
        newdp=0
        
        #1から36までの数え上げ結果から、10から369までの数え上げ結果を計算する。
        for i in range(10):
            newdp+=dp
        
        #370から375の数え上げ結果を、n_infoから計算する。
        for i in range(nn):
            newdp+=n_info

        #1から9の数え上げ結果を計算する。
        for i in range(1,10):
            newdp+=1

        #dpをnewdpに更新する
        dp=newdp

        #n_infoを376に関する情報に更新する。
        n_info+=nn


    #n自身が数え上げ結果に入っていないので加える。nの桁を最後まで見たので、n_infoはn自身に関する情報が入っているはず。    
    dp+=n_info

    #0を含めるなら含める


    #答えを出力
    print(dp)

if __name__ == '__main__':
    main()